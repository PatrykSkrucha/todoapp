{"version":3,"sources":["components/Tasks/Tasks.scss","components/Tasks/Task/Task.js","components/Tasks/Tasks.js","components/Input/Input.js","components/ToDoApp/TodoApp.js","containers/App.js","serviceWorker.js","index.js","components/Tasks/Task/Task.scss","components/ToDoApp/ToDoApp.scss"],"names":["module","exports","UlList","withStyles","theme","deleteIcon","color","blue","props","classes","react_default","a","createElement","className","styles","Task","Text","task","DeleteButton","index_es","onClick","deleteHandler","Delete_default","tasks","list","toDo","map","el","key","react_beautiful_dnd_esm","concat","draggableId","index","provided","snapshot","Object","assign","ref","innerRef","draggableProps","dragHandleProps","Task_Task","Fragment","droppableId","droppableProps","placeholder","root","background","borderRadius","border","boxShadow","textTransform","marginTop","input","defineProperty","width","breakpoints","down","id","label","type","onChange","changeHandler","inputRef","onKeyDown","handleKeyDown","size","submitHandler","toDoApp","useRef","_useState","useState","_useState2","slicedToArray","setTask","_useState3","_useState4","toDoList","setToDoList","trim","current","value","onDragEnd","result","destination","items","startIndex","endIndex","toConsumableArray","_result$splice","splice","removed","reorder","source","Wrap","Input","e","target","refInput","which","Tasks","Tasks_Tasks","filter","App","TodoApp","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.082e9100.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"UlList\":\"Tasks__UlList___dkvZ9\"};","import React from 'react'\r\nimport styles from './Task.scss'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton, withStyles } from '@material-ui/core/';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst style = theme => (\r\n\r\n\t{\r\n\t\tdeleteIcon: {\r\n\t\t\tcolor: blue[600],\r\n\t\t}\r\n\t}\r\n\r\n)\r\nconst task = (props) => {\r\n\r\n\tconst { classes } = props;\r\n\r\n\r\n\treturn (\r\n\t\t\t\t<div \r\n\t\t\t\t\tclassName={styles.Task}>\r\n\t\t\t\t\t<span className={styles.Text}>{props.task}</span>\r\n\t\t\t\t\t<div className={styles.DeleteButton}>\r\n\t\t\t\t\t\t<IconButton onClick={props.deleteHandler} className={classes.deleteIcon}>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default withStyles(style)(task);\r\n\r\n","import React from 'react'\r\nimport Task from './Task/Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport classes from './Tasks.scss'\r\n\r\nconst tasks = (props) => {\r\n\r\n\tconst clicked = key => (\r\n\t\tconsole.log(key)\r\n\t)\r\n\r\n\tconst list = props.toDo.map((el, key) => {\r\n\t\treturn (\r\n\t\t\t<Draggable key={`item-key-${key}`} draggableId={`item-id-${key}`} index={key}>\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\ttask={el}\r\n\t\t\t\t\t\t\tdeleteHandler={() => props.deleteHandler(key)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Draggable>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\tclassName={classes.UlList}\r\n\t\t\t\t\t\t{...provided.droppableProps}>\r\n\t\t\t\t\t\t{list}\r\n\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Droppable>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default tasks","import React from 'react'\r\nimport {Input, Button, withStyles} from '@material-ui/core';\r\n\r\nconst styles = theme =>(\r\n\r\n\t{\r\n\t\troot: {\r\n\t\t\tbackground: 'linear-gradient(45deg, #00acc1 30%, #01579b 90%)',\r\n\t\t\tborderRadius: 3,\r\n\t\t\tborder: 0,\r\n\t\t\tcolor: 'white',\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(0, 172, 193, .2)',\r\n\t\t\ttextTransform: 'capitalize',\r\n\t\t\tmarginTop: 10,\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tmarginTop: 15,\r\n\t\t\twidth: '50vw',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '90vw',\r\n\t\t\t  },\r\n\t\t}\r\n\t}\r\n\t) \r\n\t\r\n\r\nconst input = (props) => {\r\n\r\n\r\n\tconst { classes } = props;\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tinput: classes.input,\r\n\t\t\t\t}}\r\n\t\t\t\tid=\"standard-name\"\r\n\t\t\t\tlabel=\"Utwórz notatkę\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={props.changeHandler}\r\n\t\t\t\tinputRef={props.inputRef}\r\n\t\t\t\tonKeyDown={props.handleKeyDown}\r\n\t\t\t\tplaceholder=\"Utwórz zadanie\"\r\n\t\t\t/>\r\n\t\t\t\r\n\r\n\t\t\t<Button\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\troot: classes.root, \r\n\t\t\t\t}}\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tonClick={props.submitHandler}>\r\n\t\t\t\t\r\n\t\t\t\tDodaj zadanie\r\n    \t\t</Button>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(input);\r\n\r\n","import React, { useState, useRef } from 'react'\r\nimport Tasks from '../Tasks/Tasks'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport Input from '../Input/Input'\r\nimport classes from './ToDoApp.scss'\r\n\r\nconst toDoApp = () => {\r\n\r\n\tconst inputRef = useRef()\r\n\tconst [task, setTask] = useState('')\r\n\tconst [toDoList, setToDoList] = useState([])\r\n\r\n\tconst changeHandler = e => {\r\n\t\tsetTask(e.target.value)\r\n\t}\r\n\r\n\tconst submitHandler = () => {\r\n\t\tif (task.trim()) {\r\n\t\t\tsetToDoList(toDoList.concat(task))\r\n\t\t\tsetTask('')\r\n\t\t\tinputRef.current.value = ''\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tif (e.which === 13) submitHandler()\r\n\t}\r\n\r\n\tconst deleteHandler = id => {\r\n\r\n\t\tsetToDoList(toDoList.filter((el, key) => key !== id))\r\n\t}\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = [...list];\r\n\t\tconst [removed] = result.splice(startIndex, 1);\r\n\t\tresult.splice(endIndex, 0, removed);\r\n\t  \r\n\t\treturn result;\r\n\t  }\r\n\r\n\tconst dragEndHandler = (result) => {\r\n\t\tif (!result.destination) return\r\n\t\r\n\t\tconst items = reorder(\r\n\t\t  toDoList,\r\n\t\t  result.source.index,\r\n\t\t  result.destination.index\r\n\t\t)\r\n\t\r\n\t\tsetToDoList(items)\r\n\t  }\r\n\r\n\treturn (\r\n\r\n\t\t\t<DragDropContext\r\n\t\t\t\tonDragEnd={dragEndHandler}>\r\n\t\t<div className={classes.Wrap}>\r\n\t\t\t<Input\r\n\t\t\t\tchangeHandler={changeHandler}\r\n\t\t\t\trefInput={inputRef}\r\n\t\t\t\thandleKeyDown={handleKeyDown}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tsubmitHandler={submitHandler}\r\n\t\t\t\tvalue={task}\r\n\t\t\t\tinputRef={inputRef} />\r\n\t\t\t\t<div className={classes.Tasks}>\r\n\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\ttoDo={toDoList}\r\n\t\t\t\t\t\tdeleteHandler={deleteHandler} />\r\n\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\r\n\t)\r\n}\r\n\r\nexport default toDoApp;","import React from 'react';\nimport TodoApp from '../components/ToDoApp/TodoApp'\n\nconst App = () => {\n\n\t\n\n\treturn (\n\t\t<>\n\t\t\t<TodoApp />\n\t\t</>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task__Task___3UTC2\",\"Text\":\"Task__Text___HK-JR\",\"DeleteButton\":\"Task__DeleteButton___3b3yy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"ToDoApp__Wrap___18CrV\",\"Tasks\":\"ToDoApp__Tasks___2MaVj\"};"],"sourceRoot":""}
{"version":3,"sources":["components/Tasks/Task/Task.scss","components/Tasks/Tasks.scss","components/Tasks/Task/Task.js","components/Tasks/Tasks.js","components/Input/Input.js","components/ToDoApp/TodoApp.js","containers/App.js","serviceWorker.js","index.js","components/ToDoApp/ToDoApp.scss"],"names":["module","exports","Task","Text","DeleteButton","UlList","withStyles","theme","IconButton","color","blue","padding","Card","Object","defineProperty","width","minHeight","display","justifyContent","margin","breakpoints","down","marginLeft","alignItems","flexBasis","wordBreak","Number","props","classes","react_default","a","createElement","index_es","className","variant","gutterBottom","task","styles","onClick","deleteHandler","Delete_default","tasks","list","toDo","map","el","key","react_beautiful_dnd_esm","concat","draggableId","index","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","Task_Task","Fragment","droppableId","direction","droppableProps","placeholder","root","background","borderRadius","border","boxShadow","textTransform","marginTop","input","id","label","type","onChange","changeHandler","inputRef","onKeyDown","handleKeyDown","size","submitHandler","toDoApp","useRef","_useState","useState","_useState2","slicedToArray","setTask","_useState3","_useState4","toDoList","setToDoList","trim","current","value","Wrap","onDragEnd","result","destination","items","startIndex","endIndex","toConsumableArray","_result$splice","splice","removed","reorder","source","Input","e","target","refInput","which","Tasks","Tasks_Tasks","filter","App","TodoApp","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.156707cf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Task\":\"Task__Task___3UTC2\",\"Text\":\"Task__Text___HK-JR\",\"DeleteButton\":\"Task__DeleteButton___3b3yy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UlList\":\"Tasks__UlList___dkvZ9\"};","import React from 'react'\r\nimport styles from './Task.scss'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { IconButton, withStyles, Card, Typography } from '@material-ui/core/';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst style = theme => (\r\n\t{\r\n\t\tIconButton: {\r\n\t\t\tcolor: blue[600],\r\n\t\t\tpadding: 5\r\n\t\t},\r\n\t\tCard: {\r\n\t\t\twidth: '50vw',\r\n\t\t\tminHeight: 50,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '.5em',\r\n\t\t\tmargin: '.5em auto',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '80vw',\r\n\t\t\t  },\r\n\t\t\t\r\n\t\t},\r\n\t\tText: {\r\n\t\t\tmarginLeft: '1%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tflexBasis: '90%',\r\n\t\t\twordBreak: 'break-all',\r\n\t\t\tpadding: '.3em .1em'\r\n\r\n\t\t},\r\n\t\tNumber: {\r\n\t\t\tflexBasis: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'flex-start'\r\n\t\t}\r\n\t}\r\n)\r\n\r\n\r\nconst task = (props) => {\r\n\r\n\tconst { classes } = props;\r\n\r\n\r\n\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\t\tclassName={classes.Card}>\r\n\t\t\t\t\t<Typography className={classes.Text} variant=\"display1\" gutterBottom>{props.task}</Typography>\r\n\t\t\t\t\t<div className={styles.DeleteButton}>\r\n\t\t\t\t\t\t<IconButton onClick={props.deleteHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default withStyles(style)(task);\r\n\r\n","import React from 'react'\r\nimport Task from './Task/Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport classes from './Tasks.scss'\r\n\r\nconst tasks = (props) => {\r\n\r\n\tconst clicked = key => (\r\n\t\tconsole.log(key)\r\n\t)\r\n\r\n\tconst list = props.toDo.map((el, key) => {\r\n\t\treturn (\r\n\t\t\t<Draggable key={`item-key-${key}`} draggableId={`item-id-${key}`} index={key}>\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\ttask={el}\r\n\t\t\t\t\t\t\tdeleteHandler={() => props.deleteHandler(key)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Draggable>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Droppable droppableId=\"droppable\" direction=\"vertical\">\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName={classes.UlList}\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.droppableProps}>\r\n\t\t\t\t\t\t{list}\r\n\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Droppable>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default tasks","import React from 'react'\r\nimport {Input, Button, withStyles} from '@material-ui/core';\r\n\r\nconst styles = theme =>(\r\n\r\n\t{\r\n\t\troot: {\r\n\t\t\tbackground: 'linear-gradient(45deg, #00acc1 30%, #01579b 90%)',\r\n\t\t\tborderRadius: 3,\r\n\t\t\tborder: 0,\r\n\t\t\tcolor: 'white',\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(0, 172, 193, .2)',\r\n\t\t\ttextTransform: 'capitalize',\r\n\t\t\tmarginTop: 10,\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tmarginTop: 15,\r\n\t\t\twidth: '50vw',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '90vw',\r\n\t\t\t  },\r\n\t\t}\r\n\t}\r\n\t) \r\n\t\r\n\r\nconst input = (props) => {\r\n\r\n\r\n\tconst { classes } = props;\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\tinput: classes.input,\r\n\t\t\t\t}}\r\n\t\t\t\tid=\"standard-name\"\r\n\t\t\t\tlabel=\"Utwórz notatkę\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={props.changeHandler}\r\n\t\t\t\tinputRef={props.inputRef}\r\n\t\t\t\tonKeyDown={props.handleKeyDown}\r\n\t\t\t\tplaceholder=\"Utwórz zadanie\"\r\n\t\t\t/>\r\n\t\t\t\r\n\r\n\t\t\t<Button\r\n\t\t\t\tclasses={{\r\n\t\t\t\t\troot: classes.root, \r\n\t\t\t\t}}\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tonClick={props.submitHandler}>\r\n\t\t\t\t\r\n\t\t\t\tDodaj zadanie\r\n    \t\t</Button>\r\n\t\t</>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(input);\r\n\r\n","import React, { useState, useRef } from 'react'\r\nimport Tasks from '../Tasks/Tasks'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport Input from '../Input/Input'\r\nimport classes from './ToDoApp.scss'\r\n\r\nconst toDoApp = () => {\r\n\r\n\tconst inputRef = useRef()\r\n\tconst [task, setTask] = useState(``)\r\n\tconst [toDoList, setToDoList] = useState([])\r\n\r\n\tconst changeHandler = e => {\r\n\t\tsetTask(e.target.value)\r\n\t}\r\n\r\n\tconst submitHandler = () => {\r\n\t\tif (task.trim()) {\r\n\t\t\tsetToDoList(toDoList.concat(task))\r\n\t\t\tsetTask('')\r\n\t\t\tinputRef.current.value = ``\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tif (e.which === 13) submitHandler()\r\n\t}\r\n\r\n\tconst deleteHandler = id => {\r\n\r\n\t\tsetToDoList(toDoList.filter((el, key) => key !== id))\r\n\t}\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = [...list]\r\n\t\tconst [removed] = result.splice(startIndex, 1)\r\n\t\tresult.splice(endIndex, 0, removed)\r\n\t  \r\n\t\treturn result\r\n\t  }\r\n\r\n\tconst dragEndHandler = (result) => {\r\n\t\tif (!result.destination) return\r\n\t\r\n\t\tconst items = reorder(\r\n\t\t  toDoList,\r\n\t\t  result.source.index,\r\n\t\t  result.destination.index\r\n\t\t)\r\n\t\r\n\t\tsetToDoList(items)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className={classes.Wrap}>\r\n\t\t\t<DragDropContext\r\n\t\t\t\tonDragEnd={dragEndHandler}>\r\n\t\t\t<Input\r\n\t\t\t\tchangeHandler={changeHandler}\r\n\t\t\t\trefInput={inputRef}\r\n\t\t\t\thandleKeyDown={handleKeyDown}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tsubmitHandler={submitHandler}\r\n\t\t\t\tvalue={task}\r\n\t\t\t\tinputRef={inputRef} />\r\n\t\t\t\t<div className={classes.Tasks}>\r\n\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\ttoDo={toDoList}\r\n\t\t\t\t\t\tdeleteHandler={deleteHandler} />\r\n\r\n\t\t\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default toDoApp;","import React from 'react';\r\nimport TodoApp from '../components/ToDoApp/TodoApp'\r\n\r\nconst App = () => {\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TodoApp />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"ToDoApp__Wrap___18CrV\",\"Tasks\":\"ToDoApp__Tasks___2MaVj\"};"],"sourceRoot":""}
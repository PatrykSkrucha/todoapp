{"version":3,"sources":["components/Tasks/Task/Task.js","components/Tasks/Tasks.js","components/Input/Input.js","components/Modal/Modal.js","components/Snackbar/Snackbar.js","components/ToDoApp/TodoApp.js","containers/App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","IconButton","color","padding","Text","marginLeft","display","alignItems","flexBasis","wordBreak","Number","IconSection","props","StyledCard","styled","Card","_templateObject","isDraggable","classes","task","deleteHandler","editHandler","react_default","a","createElement","index_es","className","variant","gutterBottom","onClick","Delete_default","Edit_default","tasks","UlList","div","Tasks_templateObject","list","toDo","map","el","key","react_beautiful_dnd_esm","concat","draggableId","index","provided","snapshot","Object","assign","ref","innerRef","isDragging","draggableProps","dragHandleProps","Task","Fragment","droppableId","direction","droppableProps","placeholder","Button","background","blue","borderRadius","border","boxShadow","textTransform","marginTop","Input","defineProperty","width","breakpoints","down","nested","paddingLeft","spacing","unit","root","maxWidth","backgroundColor","palette","paper","id","label","type","onChange","changeHandler","inputRef","onKeyDown","handleKeyDown","size","submitHandler","Transition","input","margin","handleClose","open","_useState","useState","_useState2","slicedToArray","edit","setEdit","useEffect","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","value","e","target","which","spellCheck","textAlign","fontSize","&:hover","Snackbar","marginBottom","SnackbarMessage","Action","CloseIcon","Tooltip","show","setShow","snackbar","closeSnackbarHandler","revertList","action","Zoom","title","placement","onMouseOver","onMouseLeave","Close_default","anchorOriginBottomCenter","message","noWrap","Wrap","flexDirection","justifyContent","height","Tasks","minHeight","useRef","setTask","_useState3","_useState4","toDoList","setToDoList","_useState5","_useState6","deletedList","setDeletedList","_useState7","_useState8","_useState9","_useState10","editableId","setEditableId","_useState11","_useState12","setSnackbar","trim","current","onDragEnd","result","destination","items","startIndex","endIndex","toConsumableArray","_result$splice","splice","removed","reorder","source","refInput","filter","setTimeout","Modal","newTasks","App","TodoApp","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15b0cfbd.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport styled from 'styled-components'\r\nimport { IconButton, withStyles, Card, Typography } from '@material-ui/core/'\r\n\r\nconst style = theme => (\r\n\t{\r\n\t\tIconButton: {\r\n\t\t\tcolor: '#ff3d00',\r\n\t\t\tpadding: 5\r\n\t\t},\r\n\t\t\r\n\t\tText: {\r\n\t\t\tmarginLeft: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tflexBasis: '90%',\r\n\t\t\twordBreak: 'break-all',\r\n\t\t\tpadding: '.3em .1em'\r\n\r\n\t\t},\r\n\t\tNumber: {\r\n\t\t\tflexBasis: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'flex-start'\r\n\t\t},\r\n\t\tIconSection: {\r\n\t\t\tflexBasis: '5%',\r\n\t\t\tpadding: '2% 1%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'flex-start'\r\n\t\t}\r\n\t}\r\n)\r\n\r\n\r\nconst task = (props) => {\r\n\t\r\n\tconst StyledCard = styled(Card)`\r\n\t\twidth: 80vw;\r\n\t\tmin-height: 50px;\r\n\t\tbackground-color: ${props=>props.isDraggable? '#f5f5f5' : '#757575'};\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: flex-end;\r\n\t\tpadding: .5em;\r\n\t\tmargin: .5em auto;\r\n\t\t@media(min-width: 960px){\r\n\t\t\twidth: 50vw;\r\n\t\t}\r\n\t`;\r\n\t\r\n\t\r\n\tconst { classes, task, deleteHandler, editHandler } = props\r\n\r\n\r\n\treturn (\r\n\t\t\t\t<StyledCard>\r\n\t\t\t\t\t<Typography className={classes.Text} variant=\"display1\" gutterBottom>{task}</Typography>\r\n\t\t\t\t\t<div className={classes.IconSection}>\r\n\t\t\t\t\t\t<IconButton onClick={deleteHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<IconButton onClick={editHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</StyledCard>\r\n\r\n\t)\r\n}\r\n\r\ntask.propTypes = {\r\n\ttask: PropTypes.any\r\n}\r\n\r\nexport default withStyles(style)(task);\r\n\r\n","import React from 'react'\r\nimport Task from './Task/Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport styled from 'styled-components';\r\nconst tasks = (props) => {\r\n\r\n\tconst UlList = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-content: center;\r\n\t\tmargin: 0 auto;\t\r\n\t`\r\n\r\n\tconst list = props.toDo.map((el, key) => {\r\n\t\t\treturn (\r\n\t\t\t<Draggable key={`item-key-${key}`} draggableId={`item-id-${key}`} index={key}>\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\tisDragging={snapshot.isDragging}\r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\ttask={el}\r\n\t\t\t\t\t\t\tdeleteHandler={() => props.deleteHandler(key)}\r\n\t\t\t\t\t\t\teditHandler={() => props.editHandler(key)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Draggable>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Droppable droppableId=\"droppable\" direction=\"vertical\">\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<UlList\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.droppableProps}>\r\n\t\t\t\t\t\t{list}\r\n\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t</UlList>\r\n\t\t\t\t)}\r\n\t\t\t</Droppable>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default tasks","import React from 'react'\r\nimport { Input, Button, withStyles } from '@material-ui/core'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\n\r\nconst styles = theme =>(\r\n\r\n\t{\r\n\t\tButton: {\r\n\t\t\tbackground: `linear-gradient(45deg, ${blue[600]} 30%, ${blue[800]} 90%)`,\r\n\t\t\tborderRadius: 3,\r\n\t\t\tborder: 0,\r\n\t\t\tcolor: 'white',\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(0, 172, 193, .2)',\r\n\t\t\ttextTransform: 'capitalize',\r\n\t\t\tmarginTop: 10,\r\n\t\t},\r\n\t\tInput: {\r\n\t\t\tmarginTop: 15,\r\n\t\t\twidth: '50vw',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '80vw',\r\n\t\t\t  },\r\n\t\t},\r\n\t\t\r\n\t\tnested: {\r\n\t\t\tpaddingLeft: theme.spacing.unit * 4,\r\n\t\t},\r\n\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmaxWidth: 360,\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t},\r\n\t\t\r\n\t\t  \r\n\t}\r\n) \r\n\r\nconst input = (props) => {\r\n\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tclassName={classes.Input}\r\n\t\t\t\tid=\"standard-name\"\r\n\t\t\t\tlabel=\"Utwórz notatkę\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={props.changeHandler}\r\n\t\t\t\tinputRef={props.inputRef}\r\n\t\t\t\tonKeyDown={props.handleKeyDown}\r\n\t\t\t\tplaceholder=\"Utwórz zadanie\" />\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.Button}\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tonClick={props.submitHandler}>\r\n\t\t\t\t\r\n\t\t\t\tDodaj zadanie\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(input);\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Slide, DialogTitle, DialogContentText, DialogContent, Dialog, DialogActions, withStyles, Input, Button, } from '@material-ui/core';\r\n\r\nconst styles = theme => (\r\n\t{\r\n\t\tinput: {\r\n\t\t\tmargin: theme.spacing.unit,\r\n\t\t}\r\n\t}\r\n)\r\n\r\nconst Transition = (props) => <Slide direction=\"up\" {...props} />\r\n\r\nconst modal = (props) => {\r\n\r\n\tconst { classes, handleClose, open, task } = props;\r\n\tconst [edit, setEdit] = useState(0)\r\n\tuseEffect(()=>setEdit(task),[task])\r\n\r\n\tconst editHandler = e => {\r\n\t\tsetEdit(e.target.value)\r\n\t}\r\n\tconst handleKeyDown = e => {\r\n\t\tif(e.which===13) handleClose(edit)\r\n\t}\r\n\treturn (\r\n\t\t\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tTransitionComponent={Transition}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\tonClose={()=>handleClose(edit)}\r\n\t\t\t\taria-labelledby=\"alert-dialog-slide-title\"\r\n\t\t\t\taria-describedby=\"alert-dialog-slide-description\"\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"alert-dialog-slide-title\">\r\n\t\t\t\t\t{\"Edytuj notatkę\"}\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-slide-description\">\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue={edit}\r\n\t\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tonChange={editHandler}\r\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={()=>handleClose(edit)} color=\"primary\">\r\n\t\t\t\t\t\tAkceptuj\r\n            </Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(modal)\r\n","import React, {useState} from 'react'\r\nimport { Snackbar, Tooltip, SnackbarContent, Button, Typography, withStyles, IconButton, Zoom  } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst style = {\r\n\tText: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tButton: {\r\n\t\tcolor: '#ffb300',\r\n\t\tpadding: '2%',\r\n\t\tfontSize: '.96em',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: '#424242'\r\n\t\t},\r\n\t\t\r\n\t},\r\n\tIconButton: {\r\n\t\tpadding: 5,\r\n\t\tcolor: '#fafafa',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: '#e0e0e0',\r\n\t\t\tbackgroundColor: 'inherit',\r\n\t\t}\r\n\t},\r\n\tSnackbar: {\r\n\t\tmarginBottom: 30,\r\n\t\tpadding: '3% 4%',\r\n\t},\r\n\tSnackbarMessage: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\t\r\n\tAction: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tCloseIcon: {\r\n\t\tfontSize: '0.85em',\r\n\t},\r\n\tTooltip: {\r\n\t\tbackgroundColor: '#eeeeee',\r\n\t\tcolor: 'rgba(0, 0, 0, 0.87)',\r\n\t}\r\n\t\r\n\r\n}\r\n\r\nconst snackbar = (props) => {\r\n\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tconst { classes, snackbar, closeSnackbarHandler, revertList } = props\r\n\r\n\tconst action = (\r\n\t\t<div className={classes.Action}>\r\n\t\t<Button\r\n\t\t\tonClick={revertList}\r\n\t\t\tclassName={classes.Button}>\r\n\t\t\tCofnij\r\n\t\t</Button>\r\n\r\n\t\t<Tooltip \r\n\t\t\tTransitionComponent={Zoom}\r\n\t\t\ttitle=\"Zamknij\"\r\n\t\t\tplacement=\"bottom\"\r\n\t\t\topen={show}>\r\n\t\t\t<IconButton\r\n\t\t\t\tonMouseOver={()=>setShow(true)}\r\n\t\t\t\tonMouseLeave={()=>setShow(false)}\r\n\t\t\t\tonClick={closeSnackbarHandler}\r\n\t\t\t\tclassName={classes.IconButton}>\r\n\t\t\t\t\t<CloseIcon onClick={()=>setShow(false)} className={classes.CloseIcon}/>\r\n\t\t\t</IconButton>\r\n\t\t</Tooltip>\r\n\t\t</div>\r\n\t)\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOriginBottomCenter\r\n\t\t\t\topen={snackbar}\r\n\t\t\t\tonClose={closeSnackbarHandler}>\r\n\t\t\t\t<SnackbarContent\r\n\t\t\t\t\tclassName={classes.Snackbar}\r\n\t\t\t\t\tmessage={\r\n\t\t\t\t\t\t<span id=\"message-id\" className={classes.SnackbarMessage}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tclassName={classes.Text}\r\n\t\t\t\t\t\t\t\tid='message-id'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tnoWrap>\r\n\t\t\t\t\t\t\t\tNotatka została usunięta\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</span>}\r\n\t\t\t\t\taction={action}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t</Snackbar>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withStyles(style)(snackbar)","import React, { useState, useRef } from 'react'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport { withStyles } from '@material-ui/core'\r\nimport Tasks from '../Tasks/Tasks'\r\nimport Input from '../Input/Input'\r\nimport Modal from '../Modal/Modal'\r\nimport Snackbar from '../Snackbar/Snackbar'\r\n\r\nconst style = {\r\n\tWrap: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\theight: 'auto',\r\n\t},\r\n\tTasks: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: '90%',\r\n\t\tmarginTop: 30,\r\n\t\tflexDirection: 'row',\r\n\t\tminHeight: 200,\r\n\t},\r\n}\r\n\r\nconst toDoApp = (props) => {\r\n\t\r\n\r\n\tconst inputRef = useRef()\r\n\tconst [task, setTask] = useState(``)\r\n\tconst [toDoList, setToDoList] = useState([])\r\n\tconst [deletedList, setDeletedList] = useState(null)\r\n\tconst [edit, setEdit] = useState('')\r\n\tconst [editableId, setEditableId] = useState(null)\r\n\tconst [snackbar, setSnackbar] = useState(false)\r\n\r\n\tconst {classes} = props\r\n\tconst changeHandler = e => {\r\n\t\tsetTask(e.target.value)\r\n\t}\r\n\r\n\tconst submitHandler = () => {\r\n\t\tif (task.trim()) {\r\n\t\t\tsetToDoList(toDoList.concat(task))\r\n\t\t\tsetTask('')\r\n\t\t\tinputRef.current.value = ``\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst revertList = () => {\r\n\t\tsetToDoList(deletedList)\r\n\t\tsetDeletedList(null)\r\n\t\tsetSnackbar(false)\r\n\t}\r\n\t\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tif (e.which === 13) submitHandler()\r\n\t}\r\n\r\n\tconst deleteHandler = id => {\r\n\t\tsetDeletedList(toDoList)\r\n\t\tsetToDoList(toDoList.filter((el, key) => key !== id))\r\n\t\tsetSnackbar(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetSnackbar(false)\r\n\t\t}, 9000);\r\n\t}\r\n\r\n\t\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = [...list]\r\n\t\tconst [removed] = result.splice(startIndex, 1)\r\n\t\tresult.splice(endIndex, 0, removed)\r\n\t  \r\n\t\treturn result\r\n\t  }\r\n\r\n\tconst dragEndHandler = (result) => {\r\n\t\tif (!result.destination) return\r\n\t\r\n\t\tconst items = reorder(\r\n\t\t  toDoList,\r\n\t\t  result.source.index,\r\n\t\t  result.destination.index\r\n\t\t)\r\n\t\r\n\t\tsetToDoList(items)\r\n\t}\r\n\t\r\n\tconst handleClickOpen = id => {\r\n\t\tsetEditableId(id)\r\n\t\tsetEdit(toDoList[id])\t\t\r\n\t}\r\n\r\n\t\r\n\tconst handleClose = task => {\r\n\t\t\r\n\t\tif(task===edit || task===''){\r\n\t\t\tsetEdit('')\r\n\t\t\tsetEditableId(null)\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst newTasks = [...toDoList]\r\n\t\t\tnewTasks.splice(editableId, 1, task)\r\n\t\t\tsetToDoList(newTasks)\r\n\t\t\tsetEdit('')\r\n\t\t\tsetEditableId(null)\r\n\t\t}\r\n\t  }\r\n\r\n\t  const closeSnackbarHandler = () => {\r\n\t\tsetSnackbar(false)\r\n\t  }\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className={classes.Wrap}>\r\n\t\t\t<DragDropContext\r\n\t\t\t\tonDragEnd={dragEndHandler}>\r\n\t\t\t<Input\r\n\t\t\t\tchangeHandler={changeHandler}\r\n\t\t\t\trefInput={inputRef}\r\n\t\t\t\thandleKeyDown={handleKeyDown}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tsubmitHandler={submitHandler}\r\n\t\t\t\tvalue={task}\r\n\t\t\t\tinputRef={inputRef} />\r\n\t\t\t\t<div className={classes.Tasks}>\r\n\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\ttoDo={toDoList}\r\n\t\t\t\t\t\tdeleteHandler={deleteHandler}\r\n\t\t\t\t\t\teditHandler={handleClickOpen} />\r\n\t\t\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t\t<Modal \r\n\t\t\t\thandleClose={handleClose}\r\n\t\t\t\ttask={edit}\r\n\t\t\t\topen={edit!==''}\r\n\t\t\t/>\r\n\t\t\t<Snackbar \r\n\t\t\t\tsnackbar={snackbar}\r\n\t\t\t\tcloseSnackbarHandler={closeSnackbarHandler}\r\n\t\t\t\trevertList={revertList}/>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(style)(toDoApp)","import React from 'react';\r\nimport TodoApp from '../components/ToDoApp/TodoApp'\r\n\r\nconst App = () => {\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TodoApp />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
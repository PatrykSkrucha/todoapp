{"version":3,"sources":["components/Tasks/Task/Task.js","components/Tasks/Tasks.js","components/Input/Input.js","components/Modal/Modal.js","components/Snackbar/Snackbar.js","components/ToDoApp/TodoApp.js","Test.js","containers/App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","IconButton","color","padding","Text","Object","defineProperty","marginLeft","display","alignItems","flexBasis","wordBreak","fontSize","breakpoints","down","Number","IconSection","Card","width","minHeight","backgroundColor","justifyContent","props","classes","id","task","deleteHandler","editHandler","react_default","a","createElement","react_beautiful_dnd_esm","key","concat","draggableId","index","shouldRespectForceTouch","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","index_es","className","variant","gutterBottom","inline","style","onClick","Delete_default","Edit_default","tasks","UlList","styled","List","_templateObject","list","toDo","map","el","Task","droppableId","rootRef","droppableProps","placeholder","Button","background","blue","borderRadius","border","boxShadow","textTransform","marginTop","Input","Fragment","label","type","onChange","changeHandler","inputRef","onKeyDown","handleKeyDown","size","submitHandler","Transition","direction","input","margin","spacing","unit","handleClose","open","_useState","useState","_useState2","slicedToArray","edit","setEdit","useEffect","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","value","e","target","which","spellCheck","textAlign","&:hover","Snackbar","marginBottom","SnackbarMessage","Action","CloseIcon","Tooltip","show","setShow","snackbar","closeSnackbarHandler","revertList","action","Zoom","title","placement","onMouseOver","onMouseLeave","Close_default","anchorOriginBottomCenter","message","noWrap","Wrap","flexDirection","height","Tasks","useRef","setTask","_useState3","_useState4","toDoList","setToDoList","_useState5","_useState6","deletedList","setDeletedList","_useState7","_useState8","_useState9","_useState10","editableId","setEditableId","_useState11","_useState12","setSnackbar","trim","current","onDragEnd","result","destination","items","startIndex","endIndex","toConsumableArray","_result$splice","splice","removed","reorder","source","refInput","filter","setTimeout","Modal","newTasks","getItems","count","Array","from","length","v","k","primary","secondary","undefined","App","Component","TodoApp","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83dba057.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { IconButton, withStyles, Card, Typography  } from '@material-ui/core/'\r\n\r\nconst style = theme => (\r\n\t{\r\n\t\tIconButton: {\r\n\t\t\tcolor: '#ff3d00',\r\n\t\t\tpadding: 5\r\n\t\t},\r\n\t\t\r\n\t\tText: {\r\n\t\t\tmarginLeft: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tflexBasis: '90%',\r\n\t\t\twordBreak: 'break-all',\r\n\t\t\tpadding: '.3em .1em',\r\n\t\t\tfontSize: 30,\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\tfontSize: 20,\r\n\t\t\t  },\r\n\r\n\t\t},\r\n\t\tNumber: {\r\n\t\t\tflexBasis: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'flex-start'\r\n\t\t},\r\n\t\tIconSection: {\r\n\t\t\tflexBasis: '5%',\r\n\t\t\tpadding: '2% 1%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'flex-start'\r\n\t\t},\r\n\t\tCard: {\r\n\t\t\twidth: '50vw',\r\n\t\t\tminHeight: 50,\r\n\t\t\tbackgroundColor: '#f5f5f5',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '.5em',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '80vw',\r\n\t\t\t  },\r\n\t\t}\r\n\t}\r\n)\r\n\r\n\r\nconst task = (props) => {\r\n\t\r\n\tconst { classes, id, task, deleteHandler, editHandler } = props\r\n\r\n\treturn (\r\n\t\t<Draggable key={`item-key-${id}`} draggableId={`item-id-${id}`} index={id} shouldRespectForceTouch={false}>\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef} \r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t<Card className={classes.Card}>\r\n\t\t\t\t\t<Typography className={classes.Text} variant=\"display1\" gutterBottom inline style={{wordBreak: 'break-all'}}>{task}</Typography>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className={classes.IconSection}>\r\n\t\t\t\t\t\t<IconButton onClick={deleteHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<IconButton onClick={editHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card>\r\n\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t</Draggable>\r\n\t)\r\n}\r\n\r\ntask.propTypes = {\r\n\ttask: PropTypes.any\r\n}\r\n\r\nexport default withStyles(style)(task);\r\n\r\n","import React from 'react'\r\nimport Task from './Task/Task'\r\nimport { Droppable } from 'react-beautiful-dnd'\r\nimport styled from 'styled-components';\r\nimport { List, RootRef  } from '@material-ui/core/'\r\n\r\nconst tasks = (props) => {\r\n\r\n\tconst UlList = styled(List)`\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-content: center;\r\n\t\tmargin: 0 auto;\t\r\n\t`\r\n\t\r\n\tconst list = props.toDo.map((el, key) => {\r\n\t\t\treturn (\r\n\t\t\t\r\n\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\tid={key}\r\n\t\t\t\t\t\t\ttask={el}\r\n\t\t\t\t\t\t\tdeleteHandler={() => props.deleteHandler(key)}\r\n\t\t\t\t\t\t\teditHandler={() => props.editHandler(key)} />\r\n\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t\r\n\t\t\t<Droppable droppableId=\"droppable\">\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<RootRef rootRef={provided.innerRef}>\r\n\r\n\t\t\t\t\t\t<UlList\r\n\t\t\t\t\t\t{...provided.droppableProps}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{list}\r\n\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t</UlList>\r\n\t\t\t\t\t</RootRef>\r\n\t\t\t\t)}\r\n\t\t\t</Droppable>\r\n\t\t\r\n\t)\r\n\r\n}\r\n\r\nexport default tasks","import React from 'react'\r\nimport { Input, Button, withStyles } from '@material-ui/core'\r\nimport blue from '@material-ui/core/colors/blue'\r\n\r\n\r\n\r\n\r\nconst styles = theme =>(\r\n\r\n\t{\r\n\t\tButton: {\r\n\t\t\tbackground: `linear-gradient(45deg, ${blue[600]} 30%, ${blue[800]} 90%)`,\r\n\t\t\tborderRadius: 3,\r\n\t\t\tborder: 0,\r\n\t\t\tcolor: 'white',\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(0, 172, 193, .2)',\r\n\t\t\ttextTransform: 'capitalize',\r\n\t\t\tmarginTop: 10,\r\n\t\t},\r\n\t\tInput: {\r\n\t\t\tmarginTop: 15,\r\n\t\t\twidth: '50vw',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '80vw',\r\n\t\t\t  },\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\r\n\t\t\r\n\t\t  \r\n\t}\r\n) \r\n\r\nconst input = (props) => {\r\n\t\r\n\tconst {classes} = props\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tclassName={classes.Input}\r\n\t\t\t\tid=\"standard-name\"\r\n\t\t\t\tlabel=\"Utwórz notatkę\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={props.changeHandler}\r\n\t\t\t\tinputRef={props.inputRef}\r\n\t\t\t\tonKeyDown={props.handleKeyDown}\r\n\t\t\t\tplaceholder=\"Utwórz zadanie\" />\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.Button}\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tonClick={props.submitHandler}>\r\n\t\t\t\t\r\n\t\t\t\tDodaj zadanie\r\n\t\t\t</Button>\r\n\r\n\r\n\t\t\t\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(input);\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Slide, DialogTitle, DialogContentText, DialogContent, Dialog, DialogActions, withStyles, Input, Button, } from '@material-ui/core';\r\n\r\nconst styles = theme => (\r\n\t{\r\n\t\tinput: {\r\n\t\t\tmargin: theme.spacing.unit,\r\n\t\t}\r\n\t}\r\n)\r\n\r\nconst Transition = (props) => <Slide direction=\"up\" {...props} />\r\n\r\nconst modal = (props) => {\r\n\r\n\tconst { classes, handleClose, open, task } = props;\r\n\tconst [edit, setEdit] = useState(0)\r\n\tuseEffect(()=>setEdit(task),[task])\r\n\r\n\tconst editHandler = e => {\r\n\t\tsetEdit(e.target.value)\r\n\t}\r\n\tconst handleKeyDown = e => {\r\n\t\tif(e.which===13) handleClose(edit)\r\n\t}\r\n\treturn (\r\n\t\t\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tTransitionComponent={Transition}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\tonClose={()=>handleClose(edit)}\r\n\t\t\t\taria-labelledby=\"alert-dialog-slide-title\"\r\n\t\t\t\taria-describedby=\"alert-dialog-slide-description\"\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"alert-dialog-slide-title\">\r\n\t\t\t\t\t{\"Edytuj notatkę\"}\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-slide-description\">\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue={edit}\r\n\t\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tonChange={editHandler}\r\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={()=>handleClose(edit)} color=\"primary\">\r\n\t\t\t\t\t\tAkceptuj\r\n            </Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(modal)\r\n","import React, {useState} from 'react'\r\nimport { Snackbar, Tooltip, SnackbarContent, Button, Typography, withStyles, IconButton, Zoom  } from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst style = {\r\n\tText: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tButton: {\r\n\t\tcolor: '#ffb300',\r\n\t\tpadding: '2%',\r\n\t\tfontSize: '.96em',\r\n\t\t'&:hover': {\r\n\t\t\tbackground: '#424242'\r\n\t\t},\r\n\t\t\r\n\t},\r\n\tIconButton: {\r\n\t\tpadding: 5,\r\n\t\tcolor: '#fafafa',\r\n\t\t'&:hover': {\r\n\t\t\tcolor: '#e0e0e0',\r\n\t\t\tbackgroundColor: 'inherit',\r\n\t\t}\r\n\t},\r\n\tSnackbar: {\r\n\t\tmarginBottom: 30,\r\n\t\tpadding: '3% 4%',\r\n\t},\r\n\tSnackbarMessage: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'center',\r\n\t},\r\n\t\r\n\tAction: {\r\n\t\twidth: '100%',\r\n\t},\r\n\tCloseIcon: {\r\n\t\tfontSize: '0.85em',\r\n\t},\r\n\tTooltip: {\r\n\t\tbackgroundColor: '#eeeeee',\r\n\t\tcolor: 'rgba(0, 0, 0, 0.87)',\r\n\t}\r\n\t\r\n\r\n}\r\n\r\nconst snackbar = (props) => {\r\n\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tconst { classes, snackbar, closeSnackbarHandler, revertList } = props\r\n\r\n\tconst action = (\r\n\t\t<div className={classes.Action}>\r\n\t\t<Button\r\n\t\t\tonClick={revertList}\r\n\t\t\tclassName={classes.Button}>\r\n\t\t\tCofnij\r\n\t\t</Button>\r\n\r\n\t\t<Tooltip \r\n\t\t\tTransitionComponent={Zoom}\r\n\t\t\ttitle=\"Zamknij\"\r\n\t\t\tplacement=\"bottom\"\r\n\t\t\topen={show}>\r\n\t\t\t<IconButton\r\n\t\t\t\tonMouseOver={()=>setShow(true)}\r\n\t\t\t\tonMouseLeave={()=>setShow(false)}\r\n\t\t\t\tonClick={closeSnackbarHandler}\r\n\t\t\t\tclassName={classes.IconButton}>\r\n\t\t\t\t\t<CloseIcon onClick={()=>setShow(false)} className={classes.CloseIcon}/>\r\n\t\t\t</IconButton>\r\n\t\t</Tooltip>\r\n\t\t</div>\r\n\t)\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Snackbar\r\n\t\t\t\tanchorOriginBottomCenter\r\n\t\t\t\topen={snackbar}\r\n\t\t\t\tonClose={closeSnackbarHandler}>\r\n\t\t\t\t<SnackbarContent\r\n\t\t\t\t\tclassName={classes.Snackbar}\r\n\t\t\t\t\tmessage={\r\n\t\t\t\t\t\t<span id=\"message-id\" className={classes.SnackbarMessage}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tclassName={classes.Text}\r\n\t\t\t\t\t\t\t\tid='message-id'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tnoWrap>\r\n\t\t\t\t\t\t\t\tNotatka została usunięta\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</span>}\r\n\t\t\t\t\taction={action}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t</Snackbar>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withStyles(style)(snackbar)","import React, { useState, useRef, useEffect } from 'react'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport { withStyles } from '@material-ui/core'\r\nimport Tasks from '../Tasks/Tasks'\r\nimport Input from '../Input/Input'\r\nimport Modal from '../Modal/Modal'\r\nimport Snackbar from '../Snackbar/Snackbar'\r\n\r\nconst style = {\r\n\tWrap: {\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\tjustifyContent: 'center',\r\n\t\talignItems: 'center',\r\n\t\theight: 'auto',\r\n\t},\r\n\tTasks: {\r\n\t\tdisplay: 'flex',\r\n\t\twidth: '90%',\r\n\t\tmarginTop: 30,\r\n\t\tflexDirection: 'row',\r\n\t\tminHeight: 200,\r\n\t},\r\n}\r\n\r\nconst toDoApp = (props) => {\r\n\t\r\n\r\n\tconst inputRef = useRef()\r\n\tconst [task, setTask] = useState(``)\r\n\tconst [toDoList, setToDoList] = useState([])\r\n\tconst [deletedList, setDeletedList] = useState(null)\r\n\tconst [edit, setEdit] = useState('')\r\n\tconst [editableId, setEditableId] = useState(null)\r\n\tconst [snackbar, setSnackbar] = useState(false)\r\n\r\n\tconst {classes} = props\r\n\tconst changeHandler = e => {\r\n\t\tsetTask(e.target.value)\r\n\t}\r\n\r\n\tconst submitHandler = () => {\r\n\t\tif (task.trim()) {\r\n\t\t\tsetToDoList(toDoList.concat(task))\r\n\t\t\tsetTask('')\r\n\t\t\tinputRef.current.value = ``\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst revertList = () => {\r\n\t\tsetToDoList(deletedList)\r\n\t\tsetDeletedList(null)\r\n\t\tsetSnackbar(false)\r\n\t}\r\n\t\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tif (e.which === 13) submitHandler()\r\n\t}\r\n\r\n\tconst deleteHandler = id => {\r\n\t\tsetDeletedList(toDoList)\r\n\t\tsetToDoList(toDoList.filter((el, key) => key !== id))\r\n\t\tsetSnackbar(true)\r\n\t\tconst closeSnackbar = setTimeout(() => {\r\n\t\t\tsetSnackbar(false)\r\n\t\t}, 10000);\r\n\t}\r\n\r\n\t\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = [...list]\r\n\t\tconst [removed] = result.splice(startIndex, 1)\r\n\t\tresult.splice(endIndex, 0, removed)\r\n\t  \r\n\t\treturn result\r\n\t  }\r\n\r\n\tconst dragEndHandler = (result) => {\r\n\t\tif (!result.destination) return\r\n\t\r\n\t\tconst items = reorder(\r\n\t\t  toDoList,\r\n\t\t  result.source.index,\r\n\t\t  result.destination.index\r\n\t\t)\r\n\t\r\n\t\tsetToDoList(items)\r\n\t}\r\n\t\r\n\tconst handleClickOpen = id => {\r\n\t\tsetEditableId(id)\r\n\t\tsetEdit(toDoList[id])\t\t\r\n\t}\r\n\r\n\t\r\n\tconst handleClose = task => {\r\n\t\t\r\n\t\tif(task===edit || task===''){\r\n\t\t\tsetEdit('')\r\n\t\t\tsetEditableId(null)\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst newTasks = [...toDoList]\r\n\t\t\tnewTasks.splice(editableId, 1, task)\r\n\t\t\tsetToDoList(newTasks)\r\n\t\t\tsetEdit('')\r\n\t\t\tsetEditableId(null)\r\n\t\t}\r\n\t  }\r\n\r\n\t  const closeSnackbarHandler = () => {\r\n\t\tsetSnackbar(false)\r\n\t  }\r\n\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<DragDropContext\r\n\t\t\t\tonDragEnd={dragEndHandler}>\r\n\t\t<div className={classes.Wrap}>\r\n\t\t\t<Input\r\n\t\t\t\tchangeHandler={changeHandler}\r\n\t\t\t\trefInput={inputRef}\r\n\t\t\t\thandleKeyDown={handleKeyDown}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tsubmitHandler={submitHandler}\r\n\t\t\t\tvalue={task}\r\n\t\t\t\tinputRef={inputRef} />\r\n\t\t\t\t<div className={classes.Tasks}>\r\n\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\ttoDo={toDoList}\r\n\t\t\t\t\t\tdeleteHandler={deleteHandler}\r\n\t\t\t\t\t\teditHandler={handleClickOpen} />\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t\t<Modal \r\n\t\t\t\thandleClose={handleClose}\r\n\t\t\t\ttask={edit}\r\n\t\t\t\topen={edit!==''}\r\n\t\t\t/>\r\n\t\t\t<Snackbar \r\n\t\t\t\tsnackbar={snackbar}\r\n\t\t\t\tcloseSnackbarHandler={closeSnackbarHandler}\r\n\t\t\t\trevertList={revertList}/>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withStyles(style)(toDoApp)","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n  ListItemSecondaryAction\r\n} from \"@material-ui/core\";\r\nimport RootRef from \"@material-ui/core/RootRef\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport InboxIcon from \"@material-ui/icons/Inbox\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\n\r\n// fake data generator\r\nconst getItems = count =>\r\n  Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `item-${k}`,\r\n    primary: `item ${k}`,\r\n    secondary: k % 2 === 0 ? `Whatever for ${k}` : undefined\r\n  }));\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n\r\n  ...(isDragging && {\r\n    background: \"rgb(235,235,235)\"\r\n  })\r\n});\r\n\r\nconst getListStyle = isDraggingOver => ({\r\n  background: isDraggingOver ? 'lightblue' : 'lightgrey',\r\n});\r\n\r\nclass Test extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: getItems(10)\r\n    };\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  onDragEnd(result) {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.state.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.setState({\r\n      items\r\n    });\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n  render() {\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          {(provided, snapshot) => (\r\n            <RootRef rootRef={provided.innerRef}>\r\n              <List style={getListStyle(snapshot.isDraggingOver)}>\r\n                {this.state.items.map((item, index) => (\r\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <ListItem\r\n                        ContainerProps={{ ref: provided.innerRef }}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <InboxIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText\r\n                          primary={item.primary}\r\n                          secondary={item.secondary}\r\n                        />\r\n                        <ListItemSecondaryAction>\r\n                          <IconButton>\r\n                            <EditIcon />\r\n                          </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n                {provided.placeholder}\r\n              </List>\r\n            </RootRef>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Test","import React from 'react';\r\nimport TodoApp from '../components/ToDoApp/TodoApp'\r\nimport Test from '../Test'\r\n\r\nconst App = () => {\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TodoApp />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/ToDoApp/ToDoApp.scss","components/Tasks/Task/Task.js","components/Tasks/Tasks.js","components/Input/Input.js","components/Modal/Modal.js","components/ToDoApp/TodoApp.js","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrap","Tasks","SnackbarMessage","Left","Right","withStyles","theme","IconButton","color","blue","padding","Card","Object","defineProperty","width","minHeight","display","justifyContent","margin","breakpoints","down","Text","marginLeft","alignItems","flexBasis","wordBreak","Number","props","_useState","useState","_useState2","slicedToArray","show","setShow","IconSection","styled","div","_templateObject","visible","classes","task","deleteHandler","editHandler","react_default","a","createElement","index_es","className","onMouseEnter","onMouseLeave","variant","gutterBottom","onClick","Delete_default","Edit_default","tasks","UlList","Tasks_templateObject","list","toDo","map","el","key","react_beautiful_dnd_esm","concat","draggableId","index","provided","snapshot","assign","ref","innerRef","draggableProps","dragHandleProps","Task","Fragment","droppableId","direction","droppableProps","placeholder","Button","background","borderRadius","border","boxShadow","textTransform","marginTop","Input","nested","paddingLeft","spacing","unit","root","maxWidth","backgroundColor","palette","paper","id","label","type","onChange","changeHandler","inputRef","onKeyDown","handleKeyDown","size","submitHandler","Transition","input","handleClose","open","edit","setEdit","useEffect","TransitionComponent","keepMounted","onClose","aria-labelledby","aria-describedby","value","e","target","which","spellCheck","textAlign","marginBottom","message","useRef","setTask","_useState3","_useState4","toDoList","setToDoList","_useState5","_useState6","deletedList","setDeletedList","_useState7","_useState8","_useState9","_useState10","editableId","setEditableId","_useState11","_useState12","snackbar","setSnackbar","trim","current","styles","onDragEnd","result","destination","items","startIndex","endIndex","toConsumableArray","_result$splice","splice","removed","reorder","source","refInput","filter","setTimeout","Modal","newTasks","ContentProps","anchorOriginBottomCenter","noWrap","Close_default","App","TodoApp","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.98b87bed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrap\":\"ToDoApp__Wrap___18CrV\",\"Tasks\":\"ToDoApp__Tasks___2MaVj\",\"SnackbarMessage\":\"ToDoApp__SnackbarMessage___1uD0Q\",\"Left\":\"ToDoApp__Left___1Y-LY\",\"Right\":\"ToDoApp__Right___3nvpc\"};","import React, { useState } from 'react'\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types'\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { IconButton, withStyles, Card, Typography } from '@material-ui/core/';\r\nimport blue from '@material-ui/core/colors/blue';\r\n\r\nconst style = theme => (\r\n\t{\r\n\t\tIconButton: {\r\n\t\t\tcolor: blue[600],\r\n\t\t\tpadding: 5\r\n\t\t},\r\n\t\tCard: {\r\n\t\t\twidth: '50vw',\r\n\t\t\tminHeight: 50,\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'flex-end',\r\n\t\t\tpadding: '.5em',\r\n\t\t\tmargin: '.5em auto',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '80vw',\r\n\t\t\t  },\r\n\t\t\t\r\n\t\t},\r\n\t\tText: {\r\n\t\t\tmarginLeft: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'center',\r\n\t\t\tflexBasis: '90%',\r\n\t\t\twordBreak: 'break-all',\r\n\t\t\tpadding: '.3em .1em'\r\n\r\n\t\t},\r\n\t\tNumber: {\r\n\t\t\tflexBasis: '5%',\r\n\t\t\tdisplay: 'flex',\r\n\t\t\talignItems: 'flex-start'\r\n\t\t}\r\n\t}\r\n)\r\n\r\n\r\nconst task = (props) => {\r\n\t\r\n\tconst [show, setShow] = useState(false)\r\n\r\n\tconst IconSection = styled.div`\r\n\t\tflex-basis: 5%;\r\n\t\tpadding: 2% 1%;\r\n\t\tdisplay: flex;\r\n\t\talign-items: flex-start;\r\n\t\topacity: ${props => props.visible ? \"1\" : \"0\"};\t\r\n\t`\r\n\r\n\tconst { classes, task, deleteHandler, editHandler } = props\r\n\r\n\r\n\treturn (\r\n\t\t\t\t<Card \r\n\t\t\t\t\tclassName={classes.Card}\r\n\t\t\t\t\tonMouseEnter={()=>setShow(true)}\r\n\t\t\t\t\tonMouseLeave={()=>setShow(false)}>\r\n\t\t\t\t\t<Typography className={classes.Text} variant=\"display1\" gutterBottom>{task}</Typography>\r\n\t\t\t\t\t<IconSection visible={show} >\r\n\t\t\t\t\t\t<IconButton onClick={deleteHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<IconButton onClick={editHandler} className={classes.IconButton}>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t</IconSection>\r\n\t\t\t\t</Card>\r\n\r\n\t)\r\n}\r\n\r\ntask.propTypes = {\r\n\ttask: PropTypes.any\r\n}\r\n\r\nexport default withStyles(style)(task);\r\n\r\n","import React from 'react'\r\nimport Task from './Task/Task'\r\nimport { Droppable, Draggable } from 'react-beautiful-dnd'\r\nimport styled from 'styled-components';\r\nconst tasks = (props) => {\r\n\r\n\tconst UlList = styled.div`\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-content: center;\r\n\t\tmargin: 0 auto;\t\r\n\t`\r\n\r\n\tconst list = props.toDo.map((el, key) => {\r\n\t\t\treturn (\r\n\t\t\t<Draggable key={`item-key-${key}`} draggableId={`item-id-${key}`} index={key}>\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.draggableProps}\r\n\t\t\t\t\t\t{...provided.dragHandleProps}>\r\n\t\t\t\t\t\t<Task\r\n\t\t\t\t\t\t\ttask={el}\r\n\t\t\t\t\t\t\tdeleteHandler={() => props.deleteHandler(key)}\r\n\t\t\t\t\t\t\teditHandler={() => props.editHandler(key)} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Draggable>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Droppable droppableId=\"droppable\" direction=\"vertical\">\r\n\t\t\t\t{(provided, snapshot) => (\r\n\t\t\t\t\t<UlList\r\n\t\t\t\t\t\tref={provided.innerRef}\r\n\t\t\t\t\t\t{...provided.droppableProps}>\r\n\t\t\t\t\t\t{list}\r\n\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t</UlList>\r\n\t\t\t\t)}\r\n\t\t\t</Droppable>\r\n\t\t</>\r\n\t)\r\n\r\n}\r\n\r\nexport default tasks","import React from 'react'\r\nimport { Input, Button, withStyles } from '@material-ui/core'\r\n\r\n\r\nconst styles = theme =>(\r\n\r\n\t{\r\n\t\tButton: {\r\n\t\t\tbackground: 'linear-gradient(45deg, #00acc1 30%, #01579b 90%)',\r\n\t\t\tborderRadius: 3,\r\n\t\t\tborder: 0,\r\n\t\t\tcolor: 'white',\r\n\t\t\tboxShadow: '0 3px 5px 2px rgba(0, 172, 193, .2)',\r\n\t\t\ttextTransform: 'capitalize',\r\n\t\t\tmarginTop: 10,\r\n\t\t},\r\n\t\tInput: {\r\n\t\t\tmarginTop: 15,\r\n\t\t\twidth: '50vw',\r\n\t\t\t[theme.breakpoints.down('sm')]: {\r\n\t\t\t\twidth: '90vw',\r\n\t\t\t  },\r\n\t\t},\r\n\t\t\r\n\t\tnested: {\r\n\t\t\tpaddingLeft: theme.spacing.unit * 4,\r\n\t\t},\r\n\r\n\t\troot: {\r\n\t\t\twidth: '100%',\r\n\t\t\tmaxWidth: 360,\r\n\t\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\t},\r\n\t\t\r\n\t\t  \r\n\t}\r\n) \r\n\r\nconst input = (props) => {\r\n\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Input\r\n\t\t\t\tclassName={classes.Input}\r\n\t\t\t\tid=\"standard-name\"\r\n\t\t\t\tlabel=\"Utwórz notatkę\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={props.changeHandler}\r\n\t\t\t\tinputRef={props.inputRef}\r\n\t\t\t\tonKeyDown={props.handleKeyDown}\r\n\t\t\t\tplaceholder=\"Utwórz zadanie\" />\r\n\t\t\t<Button\r\n\t\t\t\tclassName={classes.Button}\r\n\t\t\t\tsize=\"medium\"\r\n\t\t\t\tonClick={props.submitHandler}>\r\n\t\t\t\t\r\n\t\t\t\tDodaj zadanie\r\n\t\t\t</Button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(input);\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Slide, DialogTitle, DialogContentText, DialogContent, Dialog, DialogActions, withStyles, Input, Button, } from '@material-ui/core';\r\n\r\nconst styles = theme => (\r\n\t{\r\n\t\tinput: {\r\n\t\t\tmargin: theme.spacing.unit,\r\n\t\t}\r\n\t}\r\n)\r\n\r\nconst Transition = (props) => <Slide direction=\"up\" {...props} />\r\n\r\nconst modal = (props) => {\r\n\r\n\tconst { classes, handleClose, open, task } = props;\r\n\tconst [edit, setEdit] = useState(0)\r\n\tuseEffect(()=>setEdit(task),[task])\r\n\r\n\tconst editHandler = e => {\r\n\t\tsetEdit(e.target.value)\r\n\t}\r\n\tconst handleKeyDown = e => {\r\n\t\tif(e.which===13) handleClose(edit)\r\n\t}\r\n\treturn (\r\n\t\t\r\n\t\t\t<Dialog\r\n\t\t\t\topen={open}\r\n\t\t\t\tTransitionComponent={Transition}\r\n\t\t\t\tkeepMounted\r\n\t\t\t\tonClose={()=>handleClose(edit)}\r\n\t\t\t\taria-labelledby=\"alert-dialog-slide-title\"\r\n\t\t\t\taria-describedby=\"alert-dialog-slide-description\"\r\n\t\t\t>\r\n\t\t\t\t<DialogTitle id=\"alert-dialog-slide-title\">\r\n\t\t\t\t\t{\"Edytuj notatkę\"}\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-slide-description\">\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\tvalue={edit}\r\n\t\t\t\t\t\t\tclassName={classes.input}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tonChange={editHandler}\r\n\t\t\t\t\t\t\tonKeyDown={handleKeyDown}\r\n\t\t\t\t\t\t\tspellCheck={false}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</DialogContentText>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t\t<DialogActions>\r\n\t\t\t\t\t<Button onClick={()=>handleClose(edit)} color=\"primary\">\r\n\t\t\t\t\t\tAkceptuj\r\n            </Button>\r\n\t\t\t\t</DialogActions>\r\n\t\t\t</Dialog>\r\n\t\t\r\n\t)\r\n}\r\n\r\nexport default withStyles(styles)(modal)\r\n","import React, { useState, useRef } from 'react'\r\nimport Tasks from '../Tasks/Tasks'\r\nimport { DragDropContext } from 'react-beautiful-dnd'\r\nimport Input from '../Input/Input'\r\nimport Modal from '../Modal/Modal'\r\nimport styles from './ToDoApp.scss'\r\nimport {Snackbar, Button, Typography, withStyles, IconButton} from '@material-ui/core'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\nconst style = {\r\n\tText: {\r\n\t\tcolor: 'white',\r\n\t\ttextAlign: 'center',\r\n\t},\r\n\tButton: {\r\n\t\tcolor: '#ffb300',\r\n\t},\r\n\tIconButton: {\r\n\t\tpadding: 5,\r\n\t\tcolor: 'white'\r\n\t},\r\n\troot: {\r\n\t\tmarginBottom: 20\r\n\t},\r\n\tmessage: {\r\n\t\twidth: '100%',\r\n\t},\r\n\t\r\n}\r\n\r\n\r\nconst toDoApp = (props) => {\r\n\t\r\n\r\n\tconst inputRef = useRef()\r\n\tconst [task, setTask] = useState(``)\r\n\tconst [toDoList, setToDoList] = useState([])\r\n\tconst [deletedList, setDeletedList] = useState(null)\r\n\tconst [edit, setEdit] = useState('')\r\n\tconst [editableId, setEditableId] = useState(null)\r\n\tconst [snackbar, setSnackbar] = useState(false)\r\n\r\n\tconst {classes} = props\r\n\tconst changeHandler = e => {\r\n\t\tsetTask(e.target.value)\r\n\t}\r\n\r\n\tconst submitHandler = () => {\r\n\t\tif (task.trim()) {\r\n\t\t\tsetToDoList(toDoList.concat(task))\r\n\t\t\tsetTask('')\r\n\t\t\tinputRef.current.value = ``\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tconst revertList = () => {\r\n\t\tsetToDoList(deletedList)\r\n\t\tsetDeletedList(null)\r\n\t\tsetSnackbar(false)\r\n\t}\r\n\t\r\n\r\n\tconst handleKeyDown = e => {\r\n\t\tif (e.which === 13) submitHandler()\r\n\t}\r\n\r\n\tconst deleteHandler = id => {\r\n\t\tsetDeletedList(toDoList)\r\n\t\tsetToDoList(toDoList.filter((el, key) => key !== id))\r\n\t\tsetSnackbar(true)\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetSnackbar(false)\r\n\t\t}, 3000);\r\n\t}\r\n\r\n\t\r\n\r\n\tconst reorder = (list, startIndex, endIndex) => {\r\n\t\tconst result = [...list]\r\n\t\tconst [removed] = result.splice(startIndex, 1)\r\n\t\tresult.splice(endIndex, 0, removed)\r\n\t  \r\n\t\treturn result\r\n\t  }\r\n\r\n\tconst dragEndHandler = (result) => {\r\n\t\tif (!result.destination) return\r\n\t\r\n\t\tconst items = reorder(\r\n\t\t  toDoList,\r\n\t\t  result.source.index,\r\n\t\t  result.destination.index\r\n\t\t)\r\n\t\r\n\t\tsetToDoList(items)\r\n\t}\r\n\t\r\n\tconst handleClickOpen = id => {\r\n\t\tsetEditableId(id)\r\n\t\tsetEdit(toDoList[id])\t\t\r\n\t}\r\n\r\n\t\r\n\tconst handleClose = task => {\r\n\t\t\r\n\t\tif(task===edit || task===''){\r\n\t\t\tsetEdit('')\r\n\t\t\tsetEditableId(null)\r\n\t\t}\r\n\t\telse{\r\n\t\t\tconst newTasks = [...toDoList]\r\n\t\t\tnewTasks.splice(editableId, 1, task)\r\n\t\t\tsetToDoList(newTasks)\r\n\t\t\tsetEdit('')\r\n\t\t\tsetEditableId(null)\r\n\t\t}\r\n\t  };\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className={styles.Wrap}>\r\n\t\t\t<DragDropContext\r\n\t\t\t\tonDragEnd={dragEndHandler}>\r\n\t\t\t<Input\r\n\t\t\t\tchangeHandler={changeHandler}\r\n\t\t\t\trefInput={inputRef}\r\n\t\t\t\thandleKeyDown={handleKeyDown}\r\n\t\t\t\ttask={task}\r\n\t\t\t\tsubmitHandler={submitHandler}\r\n\t\t\t\tvalue={task}\r\n\t\t\t\tinputRef={inputRef} />\r\n\t\t\t\t<div className={styles.Tasks}>\r\n\t\t\t\t\t<Tasks\r\n\t\t\t\t\t\ttoDo={toDoList}\r\n\t\t\t\t\t\tdeleteHandler={deleteHandler}\r\n\t\t\t\t\t\teditHandler={handleClickOpen} />\r\n\t\t\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t\t<Modal \r\n\t\t\t\thandleClose={handleClose}\r\n\t\t\t\ttask={edit}\r\n\t\t\t\topen={edit!==''}\r\n\t\t\t/>\r\n\t\t\t<Snackbar\r\n\t\t\t\tContentProps={{\r\n\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\troot: classes.root,\r\n\t\t\t\t\t\tmessage: classes.message\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'aria-describedby': 'message-id'\r\n\t\t\t\t}}\r\n\t\t\t\tanchorOriginBottomCenter\r\n\t\t\t\topen = {snackbar}\r\n\t\t\t\tonClose = {()=>setSnackbar(false)}\r\n\t\t\t\tmessage={ \r\n\t\t\t\t\t<span className={styles.SnackbarMessage}>\r\n\t\t\t\t\t\t<div className={styles.Left}>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tclassName={classes.Text}\r\n\t\t\t\t\t\t\t\tid='message-id'\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tnoWrap>\r\n\t\t\t\t\t\t\t\tNotatka została usunięta\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className={styles.Right}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={revertList}\r\n\t\t\t\t\t\t\t\tclassName={classes.Button}>\r\n\t\t\t\t\t\t\t\tCofnij\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tonClick={() => setSnackbar(false)}\r\n\t\t\t\t\t\t\t\tclassName={classes.IconButton}>\r\n\t\t\t\t\t\t\t\t<CloseIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</span>}\r\n\r\n\t\t\t/>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\n\r\nexport default withStyles(style)(toDoApp)","import React from 'react';\r\nimport TodoApp from '../components/ToDoApp/TodoApp'\r\n\r\nconst App = () => {\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<TodoApp />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}